service: portfolio-static-site

frameworkVersion: '3'

plugins:
  - serverless-s3-sync
  - serverless-cloudfront-invalidate

provider:
  name: aws
  stage: ${opt:stage, 'production'}
  runtime: nodejs20.x
  region: ${opt:region, 'eu-west-3'}

custom:
  s3Sync:
    - bucketName: portfolio-static-site-${self:provider.stage}
      localDir: out
      deleteRemoved: true
      followSymlinks: true
      defaultContentType: text/html
      params:
        - match: "*.html"
          CacheControl: "max-age=3600"
        - match: "*.css"
          CacheControl: "max-age=31536000"
        - match: "*.js"
          CacheControl: "max-age=31536000"
        - match: "*.png"
          CacheControl: "max-age=31536000"
        - match: "*.jpg"
          CacheControl: "max-age=31536000"
        - match: "*.jpeg"
          CacheControl: "max-age=31536000"
        - match: "*.gif"
          CacheControl: "max-age=31536000"
        - match: "*.svg"
          CacheControl: "max-age=31536000"
        - match: "*.webp"
          CacheControl: "max-age=31536000"
        - match: "_next/static/**"
          CacheControl: "max-age=31536000, immutable"
  cloudfrontInvalidate:
    - distributionIdKey: CloudFrontDistributionId
      items:
        - /*

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: portfolio-static-site-${self:provider.stage}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          IgnorePublicAcls: false
          BlockPublicPolicy: false
          RestrictPublicBuckets: false
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: 404.html
    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: S3Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: S3Bucket
                    - '/*'
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Origins:
            - DomainName: { 'Fn::GetAtt': ['S3Bucket', 'DomainName'] }
              Id: S3-Bucket-Origin
              S3OriginConfig:
                OriginAccessIdentity: ''
          DefaultCacheBehavior:
            TargetOriginId: S3-Bucket-Origin
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            MinTTL: 0
            DefaultTTL: 3600
            MaxTTL: 86400
            Compress: true
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
          CacheBehaviors:
            # Cache static assets for longer
            - PathPattern: "_next/static/*"
              TargetOriginId: S3-Bucket-Origin
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - GET
                - HEAD
              CachedMethods:
                - GET
                - HEAD
              ForwardedValues:
                QueryString: false
                Cookies:
                  Forward: none
              MinTTL: 31536000
              DefaultTTL: 31536000
              MaxTTL: 31536000
              Compress: true
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponsePagePath: /404.html
              ResponseCode: 404
              ErrorCachingMinTTL: 300
            - ErrorCode: 403
              ResponsePagePath: /404.html
              ResponseCode: 404
              ErrorCachingMinTTL: 300
          PriceClass: PriceClass_100
  Outputs:
    CloudFrontDistributionId:
      Value:
        Ref: CloudFrontDistribution
      Description: CloudFront Distribution ID
    CloudFrontURL:
      Value:
        Fn::Sub: "https://${CloudFrontDistribution.DomainName}"
      Description: CloudFront Distribution URL
    S3BucketName:
      Value:
        Ref: S3Bucket
      Description: Name of the S3 bucket